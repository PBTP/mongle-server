name: Dockerizing to Amazon ECR

on:
  push:       # 트리거
    branches:
      - main
      - dev
      
env:
  AWS_REGION: ap-northeast-2     
  ECR_REPOSITORY: ${{ secrets.ECR_REPOSITORY_NAME }}            
  

jobs:
  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    environment: production

    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}         
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Build, tag, and push image to Amazon ECR
      id: build-image
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        IMAGE_TAG: latest      
      run: |
        docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
        echo "::set-output name=image::$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG"
    - name: AWS SSM Send-Command
      uses: peterkimzz/aws-ssm-send-command@master
      id: ssm
      with:
        aws-region: ${{ env.AWS_REGION }}
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        instance-ids: ${{ secrets.EC2_INSTANCE_ID }}

        working-directory: /home/ubuntu/app
        command: sudo echo 'y' | sudo docker container prune && sudo docker-compose up -d && sudo echo 'y' | sudo docker system prune
        comment: Server restart!
    # - name: EC2 server deploy
    #   uses: appleboy/ssh-action@master
    #   with:
    #     host: ${{ secrets.EC2_HOST_IP }}
    #     key: ${{ secrets.EC2_SSH_KEY }}
    #     username: ${{ secrets.EC2_USER_NAME }}
    #     port: ${{ secrets.EC2_PORT }}
    #     script: | 
    #       ~/app &&
    #       sudo docker-compose up -d &&
    #       sudo echo 'y' | sudo docker system prune